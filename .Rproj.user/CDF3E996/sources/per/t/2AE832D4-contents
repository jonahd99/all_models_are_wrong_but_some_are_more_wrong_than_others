################################################################################
# Preamble                                                                     #
################################################################################

library("here")
library("tidyverse")
library("janitor")

my_theme <- theme_classic(base_size = 10) 

theme_set(my_theme)

# Colours
col_hyp <- "#F8766D"
col_pow <- "#00BFC4"

################################################################################
# Mitchell - Data                                                              #
################################################################################

mitchell_phys <- read_csv(here("data","mitchell_data_phys.csv")) %>%
  clean_names() %>%
  rename(id = participant_id)

IDs <- mitchell_phys %>%
  pull(id) %>%
  unique() 

apo_tib <- mitchell_phys %>%
  select(id,apo) %>% rename(power = apo) %>%
  mutate(durations = 5,
         effort_id = 6)



mitchell_pow %>%
  filter(id == 8) %>%
  ggplot() +
  geom_point(mapping = aes(x = durations, y = power)) +
  scale_y_continuous(trans = "log")+
  scale_x_continuous(trans = "log")



mitchell_pow <- read_csv(here("data","mitchell_data_pow.csv")) %>%
  clean_names() %>%
  rename(durations = duration) %>%
  cbind(effort_id = rep(1:5, each = length(IDs))) %>%
  rbind(apo_tib) %>%
  filter(!(id == 8 & effort_id %in% c(3,4)))


################################################################################
# Mitchell - Fitting the power-law model to each athlete                       #
################################################################################

fit_pow_lr_pow <- function(data_pl,t){
  pl_lr <- lm(data = data_pl, I(log(power)) ~ I(log(durations)))
  a <- as.numeric(exp(coef(pl_lr)[1]))
  b <- as.numeric(-coef(pl_lr)[2])
  pl_power <- a/(t^b)
  return(list(S = a,
              E = 1-b,
              duration = t,
              power = pl_power))
}


aux_IDs <- mitchell_pow %>%
  pull(id) %>%
  unique() 

pl_tib <- tibble()

pl_tib_plot <- tibble()
t_p <- 1:(max(mitchell_pow$durations, na.rm = TRUE) * 1.1)

for (i in aux_IDs) {
  data_pl_i <- mitchell_pow %>%
    filter(id == i  & durations >= 120 & durations <= 1200) 
  pl_list_i <- fit_pow_lr_pow(data_pl = data_pl_i, t = t_p)
  pl_tib_aux <- tibble(id = i,
                       S = pl_list_i$S,
                       E = pl_list_i$E)
  pl_tib <- rbind(pl_tib,pl_tib_aux)
  
  pl_tib_plot_aux <- tibble(id = i,
                       durations = pl_list_i$duration,
                       power = pl_list_i$power)
  
  pl_tib_plot <- rbind(pl_tib_plot,pl_tib_plot_aux)
}

################################################################################
# Mitchell - Fitting the critical-power model to each athlete                  #
################################################################################

fit_cp_lr_pow <- function(data_cp,t){
  cp_lr <- lm(data = data_cp, power ~ I(1/durations))
  w_prime <- cp_lr$coefficients["I(1/durations)"]
  cp <- cp_lr$coefficients["(Intercept)"]
  cp_power <- w_prime/t + cp
  
  return(list(cp = cp,
              w_prime = w_prime,
              duration = t,
              power = cp_power))
}


aux_IDs <- mitchell_pow %>%
  pull(id) %>%
  unique() 

cp_tib <- tibble()

cp_tib_plot <- tibble()
t_p <- 1:(max(mitchell_pow$durations, na.rm = TRUE) * 1.1)

for (i in aux_IDs) {
  data_cp_i <- mitchell_pow %>%
    filter(id == i & durations >= 120 & durations <= 900) 
  cp_list_i <- fit_cp_lr_pow(data_cp = data_cp_i, t = t_p)
  cp_tib_aux <- tibble(id = i,
                       cp = cp_list_i$cp,
                       w_prime = cp_list_i$w_prime)
  cp_tib <- rbind(cp_tib,cp_tib_aux)
  
  cp_tib_plot_aux <- tibble(id = i,
                            durations = cp_list_i$duration,
                            power = cp_list_i$power)
  
  cp_tib_plot <- rbind(cp_tib_plot,cp_tib_plot_aux)
}

par_tib <- pl_tib %>% 
  left_join(cp_tib, by = "id")

################################################################################
# Mitchell - Correlation plot 5 second power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_5s = S/(30^(1-E)),
         cp_5s = cp + w_prime/(30)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_5s,cp_5s,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_5s","cp_5s")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_5s,use="complete.obs"),
         correlation_cp = cor(value,cp_5s,use="complete.obs"),
         p_val_pl = cor.test(value,pl_5s,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_5s,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_5s,cp_5s), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_5s), colour = col_pow) +
  geom_point(aes(x = value, y = cp_5s), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_5s),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_5s),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 1-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_5s, na.rm = TRUE) * 1.5)) -> pl_vs_cp_5s_cor

ggsave(here("figures"," pl_vs_cp_5s_cor_plot.png"), plot =  pl_vs_cp_5s_cor, dpi = 320)


################################################################################
# Mitchell - Correlation plot 30 second power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_30s = S/(30^(1-E)),
         cp_30s = cp + w_prime/(30)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_30s,cp_30s,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_30s","cp_30s")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_30s,use="complete.obs"),
         correlation_cp = cor(value,cp_30s,use="complete.obs"),
         p_val_pl = cor.test(value,pl_30s,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_30s,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_30s,cp_30s), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_30s), colour = col_pow) +
  geom_point(aes(x = value, y = cp_30s), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_30s),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_30s),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 30s power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_30s, na.rm = TRUE) * 1.5)) -> pl_vs_cp_30s_cor

ggsave(here("figures"," pl_vs_cp_30s_cor_plot.png"), plot =  pl_vs_cp_30s_cor, dpi = 320)


################################################################################
# Mitchell - Correlation plot 1 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_1 = S/(60^(1-E)),
         cp_1 = cp + w_prime/(60)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_1,cp_1,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_1","cp_1")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_1,use="complete.obs"),
         correlation_cp = cor(value,cp_1,use="complete.obs"),
         p_val_pl = cor.test(value,pl_1,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_1,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_1,cp_1), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                       paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_1), colour = col_pow) +
  geom_point(aes(x = value, y = cp_1), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_1),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_1),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 1-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_1, na.rm = TRUE) * 1.5)) -> pl_vs_cp_1_cor

ggsave(here("figures"," pl_vs_cp_1_cor_plot.png"), plot =  pl_vs_cp_1_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot 2 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_2 = S/((60*2)^(1-E)),
         cp_2 = cp + w_prime/(60*2)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_2,cp_2,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_2","cp_2")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_2,use="complete.obs"),
         correlation_cp = cor(value,cp_2,use="complete.obs"),
         p_val_pl = cor.test(value,pl_2,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_2,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_2,cp_2), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_2), colour = col_pow) +
  geom_point(aes(x = value, y = cp_2), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_2),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_2),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 2-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_2, na.rm = TRUE) * 1.5)) -> pl_vs_cp_2_cor

ggsave(here("figures"," pl_vs_cp_2_cor_plot.png"), plot =  pl_vs_cp_2_cor, dpi = 320)


################################################################################
# Mitchell - Correlation plot 5 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_5 = S/((60*5)^(1-E)),
         cp_5 = cp + w_prime/(60*5)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_5,cp_5,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_5","cp_5")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_5,use="complete.obs"),
         correlation_cp = cor(value,cp_5,use="complete.obs"),
         p_val_pl = cor.test(value,pl_5,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_5,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_5,cp_5), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_5), colour = col_pow) +
  geom_point(aes(x = value, y = cp_5), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_5),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_5),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 5-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_5, na.rm = TRUE) * 1.5)) -> pl_vs_cp_5_cor

ggsave(here("figures"," pl_vs_cp_5_cor_plot.png"), plot =  pl_vs_cp_5_cor, dpi = 320)



################################################################################
# Mitchell - Correlation plot 8 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_8 = S/((60*8)^(1-E)),
         cp_8 = cp + w_prime/(60*8)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_8,cp_8,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_8","cp_8")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_8,use="complete.obs"),
         correlation_cp = cor(value,cp_8,use="complete.obs"),
         p_val_pl = cor.test(value,pl_8,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_8,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_8,cp_8), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_8), colour = col_pow) +
  geom_point(aes(x = value, y = cp_8), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_8),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_8),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 8-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_8, na.rm = TRUE) * 1.5)) -> pl_vs_cp_8_cor

ggsave(here("figures"," pl_vs_cp_8_cor_plot.png"), plot =  pl_vs_cp_8_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot 20 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_20 = S/((60*20)^(1-E)),
         cp_20 = cp + w_prime/(60*20)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_20,cp_20,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_20","cp_20")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_20,use="complete.obs"),
         correlation_cp = cor(value,cp_20,use="complete.obs"),
         p_val_pl = cor.test(value,pl_20,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_20,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_20,cp_20), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_20), colour = col_pow) +
  geom_point(aes(x = value, y = cp_20), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_20),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_20),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 20-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_20, na.rm = TRUE) * 1.5)) -> pl_vs_cp_20_cor

ggsave(here("figures"," pl_vs_cp_20_cor_plot.png"), plot =  pl_vs_cp_20_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot 30 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_30 = S/((60*30)^(1-E)),
         cp_30 = cp + w_prime/(60*30)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_30,cp_30,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_30","cp_30")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_30,use="complete.obs"),
         correlation_cp = cor(value,cp_30,use="complete.obs"),
         p_val_pl = cor.test(value,pl_30,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_30,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_30,cp_30), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_30), colour = col_pow) +
  geom_point(aes(x = value, y = cp_30), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_30),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_30),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 30-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_30, na.rm = TRUE) * 1.5)) -> pl_vs_cp_30_cor

ggsave(here("figures"," pl_vs_cp_30_cor_plot.png"), plot =  pl_vs_cp_30_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot 45 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_45 = S/((60*45)^(1-E)),
         cp_45 = cp + w_prime/(60*45)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_45,cp_45,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_45","cp_45")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_45,use="complete.obs"),
         correlation_cp = cor(value,cp_45,use="complete.obs"),
         p_val_pl = cor.test(value,pl_45,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_45,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_45,cp_45), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_45), colour = col_pow) +
  geom_point(aes(x = value, y = cp_45), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_45),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_45),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 45-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_45, na.rm = TRUE) * 1.5)) -> pl_vs_cp_45_cor

ggsave(here("figures"," pl_vs_cp_45_cor_plot.png"), plot =  pl_vs_cp_45_cor, dpi = 320)


################################################################################
# Mitchell - Correlation plot 20 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_60 = S/((60*20)^(1-E)),
         cp_60 = cp + w_prime/(60*60)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_60,cp_60,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_60","cp_60")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_60,use="complete.obs"),
         correlation_cp = cor(value,cp_60,use="complete.obs"),
         p_val_pl = cor.test(value,pl_60,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_60,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_60,cp_60), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_60), colour = col_pow) +
  geom_point(aes(x = value, y = cp_60), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_60),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_60),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 60-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_60, na.rm = TRUE) * 1.5)) -> pl_vs_cp_60_cor

ggsave(here("figures"," pl_vs_cp_60_cor_plot.png"), plot =  pl_vs_cp_60_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot 60 minute power                                   #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(par_tib, by = "id") %>%
  mutate(pl_120 = S/((60*120)^(1-E)),
         cp_120 = cp + w_prime/(60*120)) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_120,cp_120,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","pl_120","cp_120")) %>%
  group_by(var) %>%
  mutate(correlation_pl = cor(value,pl_120,use="complete.obs"),
         correlation_cp = cor(value,cp_120,use="complete.obs"),
         p_val_pl = cor.test(value,pl_120,use="complete.obs")$p.value,
         p_val_cp = cor.test(value,cp_120,use="complete.obs")$p.value,
         x_pos_pl =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         x_pos_cp =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.2 + min(value, na.rm = TRUE),
         y_pos =  max(c(pl_120,cp_120), na.rm = TRUE) * 1.35, 
         lab_pl = if_else(round(p_val_pl,3) < 0.001,paste("r =", round(correlation_pl, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_pl, 3),"\np =", round(p_val_pl,3))),
         lab_cp = if_else(round(p_val_cp,3) < 0.001,paste("r =", round(correlation_cp, 3),"\np < 0.001") ,
                          paste("r =", round(correlation_cp, 3),"\np =", round(p_val_cp,3)))) 


corr_plot_tib_test %>%
  ggplot() +
  geom_point(aes(x = value, y = pl_120), colour = col_pow) +
  geom_point(aes(x = value, y = cp_120), colour = col_hyp) +
  geom_text(mapping = aes(x = x_pos_pl, y = y_pos, label = lab_pl), colour = col_pl) + 
  geom_text(mapping = aes(x = x_pos_cp, y = y_pos, label = lab_cp), colour = col_hyp) + 
  geom_smooth(mapping = aes(x = value, y = pl_120),method = "lm", formula = 'y~x', se = FALSE, colour = col_pl) +
  geom_smooth(mapping = aes(x = value, y = cp_120),method = "lm", formula = 'y~x', se = FALSE, colour = col_hyp) +
  labs(x = "", y = "Predicted 1-min power") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(0, max(corr_plot_tib_test$cp_120, na.rm = TRUE) * 1.5)) -> pl_vs_cp_120_cor

ggsave(here("figures"," pl_vs_cp_120_cor_plot.png"), plot =  pl_vs_cp_120_cor, dpi = 320)


################################################################################
# Mitchell - Correlation plot 20 minute power                                  #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(pl_tib, by = "id") %>%
  mutate(pl_30 = S/((60*30)^(1-E))) 

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,pl_30,
         percent_type_1,percent_type_2, 
         mhc_i_csa,mhc_ii_csa,
         c_density_mm2,c_f,
         caf_mhc_i,caf_mhc_ii) %>%
  gather(key = "var", value = "value", -c("id","pl_30")) %>%
  group_by(var) %>%
  mutate(correlation = cor(value,pl_30,use="complete.obs"),
         p_val = cor.test(value,pl_30,use="complete.obs")$p.value,
         x_pos =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         y_pos =  415, #max(pl_30, na.rm = TRUE) * 1.35, 
         lab = if_else(round(p_val,3) < 0.001,paste("r =", round(correlation, 3),"\np < 0.001") ,
                       paste("r =", round(correlation, 3),"\np =", round(p_val,3)))) %>%
  mutate(var = recode(var,
                      percent_type_1 = "Type I fibre %",
                      percent_type_2 = "Type II fibre %",
                      mhc_i_csa = "CSA type I (\u03BCm^-2)",
                      mhc_ii_csa = "CSA type II (\u03BCm^-2)",
                      c_density_mm2 = "Capillary density (cap.mm^-2)",
                      c_f = "Capillary to fibre ratio",
                      caf_mhc_i = "CC type I",
                      caf_mhc_ii = "CC type II"))

var_levels <- corr_plot_tib_test %>% 
  pull(var) %>%
  unique()

corr_plot_tib_test %>%
  ggplot(aes(x = value, y = pl_30)) +
  geom_point(aes()) +
  geom_text(mapping = aes(x = x_pos, y = y_pos, label = lab), size = 2.5) + 
  geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
  labs(x = "", y = "30-min. max. power (as predicted by the power-law model)") +
  scale_colour_manual(values = c("black", "red"), guide = "none")+
  facet_wrap(~ factor(var, levels = var_levels), scales = "free_x", ncol = 2, strip.position = "bottom") +
  coord_cartesian(ylim = c(150, 435)) +
  theme(strip.background = element_blank(), strip.placement = "outside") -> pl_30_cor

ggsave(here("figures","pl_30_par_cor_plot.png"), plot = pl_30_cor, dpi = 320, width = 0.5 * 8, height =  0.5 * 12)


################################################################################
# Mitchell - Correlation plot for S                                            #
################################################################################

corr_plot_tib <- mitchell_phys %>%
  left_join(pl_tib, by = "id") 


corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,S,c_density_mm2,c_f,caf_mhc_i,caf_mhc_ii,
         mhc_i_csa,mhc_ii_csa,mhc_i_caf,mhc_ii_caf,no_mhc_i,no_mhc_ii,
         percent_type_1,percent_type_2,sharing_i,sharing_ii,vo2max_l_min,vo2max_ml_min_kg) %>%
  gather(key = "var", value = "value", -c("id","S")) %>%
  group_by(var) %>%
  mutate(correlation = cor(value,S,use="complete.obs"),
         p_val = cor.test(value,S,use="complete.obs")$p.value,
         x_pos =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.8 + min(value, na.rm = TRUE),
         y_pos =  1050,
         lab = if_else(round(p_val,3) < 0.001,paste("r =", round(correlation, 3),"\np < 0.001") ,
                       paste("r =", round(correlation, 3),"\np =", round(p_val,3)))) %>%
  
corr_plot_tib_test %>%
  ggplot(aes(x = value, y = S)) +
  geom_point() +
  geom_text(mapping = aes(x = x_pos, y = y_pos, label = lab)) +
  geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
  labs(x = "") +
  facet_wrap(~ var, scales = "free") +
  coord_cartesian(ylim = c(650,1100)) -> S_cor

ggsave(here("figures","Speed_par_cor_plot.png"), plot = S_cor, dpi = 320)

################################################################################
# Mitchell - Correlation plot for E                                            #
################################################################################

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,E,
         percent_type_1,percent_type_2, 
         mhc_i_csa,mhc_ii_csa,
         c_density_mm2,c_f,
         caf_mhc_i,caf_mhc_ii) %>%
  gather(key = "var", value = "value", -c("id","E")) %>%
  group_by(var) %>%
  mutate(correlation = cor(value,E,use="complete.obs"),
         p_val = cor.test(value,E,use="complete.obs")$p.value,
         x_pos =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.85 + min(value, na.rm = TRUE),
         y_pos =  0.92,
         lab = if_else(round(p_val,3) < 0.001,paste("r =", round(correlation, 3),"\np < 0.001") ,
                       paste("r =", round(correlation, 3),"\np =", round(p_val,3)))) %>%
  mutate(var = recode(var,
                      percent_type_1 = "Type I fibre %",
                      percent_type_2 = "Type II fibre %",
                      mhc_i_csa = "CSA type I (\u03BCm^-2)",
                      mhc_ii_csa = "CSA type II (\u03BCm^-2)",
                      c_density_mm2 = "Capillary density (cap.mm^-2)",
                      c_f = "Capillary to fibre ratio",
                      caf_mhc_i = "CC type I",
                      caf_mhc_ii = "CC type II"))

var_levels <- corr_plot_tib_test %>% 
  pull(var) %>%
  unique()

corr_plot_tib_test  %>%
  ggplot(aes(x = value, y = E)) +
  geom_point() +
  geom_text(mapping = aes(x = x_pos, y = y_pos, label = lab), size = 2.5) +
  geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
  labs(x = "", y = "Endurance parameter, E, of the power-law model") +
  facet_wrap(~ factor(var, levels = var_levels), scales = "free_x", ncol = 2,strip.position = "bottom") +
  coord_cartesian(ylim = c(0.77,0.94)) +
  theme(strip.background = element_blank(), strip.placement = "outside") -> E_cor

ggsave(here("figures","Endurance_par_cor_plot.png"), plot = E_cor, dpi = 320, width = 0.5 * 8, height = 0.5 * 12)

################################################################################
# Mitchell - Correlation plot for E V02                                        #
################################################################################

corr_plot_tib_test <-  corr_plot_tib %>%
  select(id,E,
         vo2max_l_min) %>%
  gather(key = "var", value = "value", -c("id","E")) %>%
  group_by(var) %>%
  mutate(correlation = cor(value,E,use="complete.obs"),
         p_val = cor.test(value,E,use="complete.obs")$p.value,
         x_pos =  (max(value, na.rm = TRUE) - min(value, na.rm = TRUE)) * 0.85 + min(value, na.rm = TRUE),
         y_pos =  0.92,
         lab = if_else(round(p_val,3) < 0.001,paste("r =", round(correlation, 3),"\np < 0.001") ,
                       paste("r =", round(correlation, 3),"\np =", round(p_val,3)))) # %>%
  # mutate(var = recode(var,
  #                     vo2max_l_min = "VO2 max ml min",
  #                     vo2max_ml_min_kg)

var_levels <- corr_plot_tib_test %>% 
  pull(var) %>%
  unique()

corr_plot_tib_test  %>%
  ggplot(aes(x = value, y = E)) +
  geom_point() +
  geom_text(mapping = aes(x = x_pos, y = y_pos, label = lab)) +
  geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
  labs(x = "", y = "Endurance parameter from the power-law model") +
  facet_wrap(~ factor(var, levels = var_levels), scales = "free", ncol = 2,strip.position = "bottom") +
  coord_cartesian(ylim = c(0.77,0.94)) +
  theme(strip.background = element_blank(), strip.placement = "outside") -> E_cor_raw_VO2

ggsave(here("figures","Endurance_par_cor_plot_raw_VO2.png"), plot = E_cor_raw_VO2, dpi = 320, width = 4, height = 4)



